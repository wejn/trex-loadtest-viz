#!/usr/bin/env ruby

# Generate loadtest files for entire tree of loadtests.
#
# Say you have data/loadtests/foo/*.json and public/
# you run "tree.rb data public /" and get the following generated:
# public/index.html
# public/*.css
# public/*.js
# public/loadtests/foo.html
# public/loadtests/index.html

require 'cgi'
require 'fileutils'

begin
  GRAPH_LOC = File.realpath(File.join(File.dirname(__FILE__), 'graph.rb'))
rescue Object
  STDERR.puts "E: can't figure out location of graph.rb"
  exit 1
end

begin
  bd = File.dirname(__FILE__)
  ASSETS_LOC = Dir[File.join(bd, '*.js')] + Dir[File.join(bd, '*.css')]
end


if ARGV.size != 3
  STDERR.puts "E: need: source dir, target dir, asset path"
  exit 1
end

source, target, ap = *ARGV

unless File.directory?(source)
  STDERR.puts "E: source dir '#{source}' isn't a dir."
  exit 1
end

unless File.directory?(target)
  STDERR.puts "E: target dir '#{target}' isn't a dir."
  exit 1
end

source = File.realpath(source)
target = File.realpath(target)

def out_html(file, list)
  File.open(file, 'w') do |f|
    f.puts <<-'EOF'
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <style>
      footer { padding-top: 1em; border-top: 1px solid #aaa; margin-top: 2em; text-align: center; color: #aaa; font-size: 70%; }
      footer a { color: #aaa; }
    </style>
    <title>Loadtests</title>
  </head>
  <body>
    <h1>Loadtests</h1>
    <ul>
  EOF
    list.each do |(k, v)|
      f.puts "      <li><a href=\"#{CGI.escapeHTML(k)}\">#{CGI.escapeHTML(v)}</a></li>"
    end
    f.puts <<-EOF
    </ul>
    <footer>Generated by <a href="https://github.com/wejn/trex-loadtest-viz/">trex-loadtest-viz</a> at #{Time.now}.</footer>
  </body>
</html>
    EOF
  end
end

def process_ltdir(source, target, ap)
  Dir.chdir(source) do
    out = []
    Dir["*"].sort.each do |e|
      next unless File.directory?(e)
      df = Dir[File.join(e, '*.json')]
      next if df.empty?
      tn = e + '.html'
      outf = File.join(target, tn)
      system("ruby", GRAPH_LOC, "--asset-prefix=#{ap}", "-t", "#{e} :: Loadtest results", "-o", outf, *df)
      #File.open(outf, 'w') { |f| f.puts([e, tn, outf].inspect) }
      out << [tn, e]
    end
    out_html(File.join(target, 'index.html'), out)
  end
end

out = []
Dir.chdir(source) do
  Dir["*"].each do |e|
    next unless File.directory?(e)
    s = File.join(source, e)
    t = File.join(target, e)
    Dir.mkdir(t)
    process_ltdir(s, t, ap)
    out << e
  end
end
out_html(File.join(target, 'index.html'), out.map { |x| [x + '/', x ] })
ASSETS_LOC.each do |a|
  FileUtils.cp(a, File.join(target, File.basename(a)))
end
